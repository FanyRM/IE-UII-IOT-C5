[
    {
        "id": "36527cff96e45198",
        "type": "tab",
        "label": "Sistema FireAlarm",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e94e4c1baa975cb6",
        "type": "mqtt in",
        "z": "36527cff96e45198",
        "name": "Leer temperatura",
        "topic": "firealarm/sensor/temperaturas",
        "qos": "0",
        "datatype": "auto",
        "broker": "f1e5f914bc295e56",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 80,
        "wires": [
            [
                "361863142cbc5a5a",
                "970af8e34751e911"
            ]
        ]
    },
    {
        "id": "361863142cbc5a5a",
        "type": "json",
        "z": "36527cff96e45198",
        "name": "Convertir JSON Temperatura",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 220,
        "y": 160,
        "wires": [
            [
                "d51ae1b6de8b715e"
            ]
        ]
    },
    {
        "id": "d51ae1b6de8b715e",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar Temperaturas",
        "func": "\n// Verificar si los datos son válidos\nif (msg.payload.temp_amb === undefined || msg.payload.temp_obj === undefined) {\n    node.warn(\"Datos de temperatura incompletos\");\n    return null;\n}\n\n// Convertir los valores a número\nlet tempAmb = parseFloat(msg.payload.temp_amb);\nlet tempObj = parseFloat(msg.payload.temp_obj);\n\n// Preparar sentencia SQL para SQLite\nmsg.topic = `INSERT INTO registro_temperaturas (temp_ambiente, temp_objeto) VALUES (${tempAmb}, ${tempObj});`;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 160,
        "wires": [
            [
                "3e4c80158653f85c"
            ]
        ]
    },
    {
        "id": "3e4c80158653f85c",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sql": "",
        "name": "Guardar Temperaturas (SQLite)",
        "x": 810,
        "y": 160,
        "wires": [
            [
                "91da866f8ff9651a"
            ]
        ]
    },
    {
        "id": "2ce57d616e2c679a",
        "type": "mqtt in",
        "z": "36527cff96e45198",
        "name": "Leer densidad",
        "topic": "firealarm/sensor/densidad",
        "qos": "0",
        "datatype": "auto",
        "broker": "f1e5f914bc295e56",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 300,
        "wires": [
            [
                "7eb808516bd88a93",
                "80c6e617d646ea43"
            ]
        ]
    },
    {
        "id": "7eb808516bd88a93",
        "type": "json",
        "z": "36527cff96e45198",
        "name": "Convertir JSON Densidad",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 210,
        "y": 380,
        "wires": [
            [
                "ea1ef4b4098a2f45"
            ]
        ]
    },
    {
        "id": "ea1ef4b4098a2f45",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar Densidad",
        "func": "// Verificar si los datos son válidos\nif (msg.payload.valor === undefined || msg.payload.estado === undefined) {\n    node.warn(\"Datos de densidad incompletos\");\n    return null;\n}\n\n// Convertir los valores\nlet densidad = parseFloat(msg.payload.valor);\nlet estado = msg.payload.estado.toString();\n\n// Preparar sentencia SQL para SQLite\nmsg.topic = `INSERT INTO registro_densidad (densidad, estado) VALUES (${densidad}, '${estado}');`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 380,
        "wires": [
            [
                "5501bb02d3f44804"
            ]
        ]
    },
    {
        "id": "5501bb02d3f44804",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sql": "",
        "name": "Guardar Densidad (SQLite)",
        "x": 770,
        "y": 380,
        "wires": [
            [
                "4e3ca5a36e727cb8"
            ]
        ]
    },
    {
        "id": "635f2e0820ada70b",
        "type": "mqtt in",
        "z": "36527cff96e45198",
        "name": "Leer actividad",
        "topic": "firealarm/sensor/actividad",
        "qos": "0",
        "datatype": "auto",
        "broker": "f1e5f914bc295e56",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 540,
        "wires": [
            [
                "b8a9902eb14451ae",
                "4bf181e9a6018d4d"
            ]
        ]
    },
    {
        "id": "b8a9902eb14451ae",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar Actividad",
        "func": "// Verificar si los datos son válidos\nif (typeof msg.payload !== 'string') {\n    node.warn(\"Datos de actividad no válidos\");\n    return null;\n}\n\n// Preparar sentencia SQL para SQLite\nmsg.topic = `INSERT INTO registro_movimiento (estado) VALUES ('${msg.payload.toString()}');`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 620,
        "wires": [
            [
                "b152b420af835760"
            ]
        ]
    },
    {
        "id": "b152b420af835760",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sql": "",
        "name": "Guardar Actividad (SQLite)",
        "x": 770,
        "y": 620,
        "wires": [
            [
                "e72c1f2944174b34"
            ]
        ]
    },
    {
        "id": "970af8e34751e911",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "Lecturas de temperatura",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "91da866f8ff9651a",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "DB Temp Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 80,
        "wires": []
    },
    {
        "id": "80c6e617d646ea43",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "Lecturas de densidad",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 300,
        "wires": []
    },
    {
        "id": "4e3ca5a36e727cb8",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "DB Densidad Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 300,
        "wires": []
    },
    {
        "id": "4bf181e9a6018d4d",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "Lecturas de actividad",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 540,
        "wires": []
    },
    {
        "id": "e72c1f2944174b34",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "DB Actividad Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 540,
        "wires": []
    },
    {
        "id": "645ef2836dfdb5e6",
        "type": "mqtt in",
        "z": "36527cff96e45198",
        "name": "Leer emergencia",
        "topic": "firealarm/emergencia",
        "qos": "0",
        "datatype": "auto",
        "broker": "f1e5f914bc295e56",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 140,
        "y": 760,
        "wires": [
            [
                "b3a11c6a658f9b43",
                "1bf1b5d9f7b2e6d9",
                "4aa327109bb59e25",
                "e4cfe9faf90eaa53",
                "ed8ef3d6da4b0b5a"
            ]
        ]
    },
    {
        "id": "b3a11c6a658f9b43",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar emergencia",
        "func": "// Crear mensaje de alerta según el tipo de activación\nlet tipoAlerta = \"\";\nlet severidad = \"\";\n\nif (msg.payload == \"1\") {\n    tipoAlerta = \"Activación manual\";\n    severidad = \"Advertencia\";\n} else if (msg.payload == \"2\") {\n    tipoAlerta = \"Detección de incendio\";\n    severidad = \"Peligrosa\";\n} else {\n    node.warn(\"Tipo de alerta desconocido\");\n    return null;\n}\n\n// Preparar sentencia SQL para SQLite\nmsg.topic = `INSERT INTO registro_alertas (tipo, severidad) VALUES ('${tipoAlerta}', '${severidad}');`;\n\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 840,
        "wires": [
            [
                "6ec0d703f9214db3"
            ],
            []
        ]
    },
    {
        "id": "6ec0d703f9214db3",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sql": "",
        "name": "Guardar alerta (SQLite)",
        "x": 600,
        "y": 820,
        "wires": [
            [
                "1c7a69094616b2b9",
                "4400575369d238b3"
            ]
        ]
    },
    {
        "id": "1bf1b5d9f7b2e6d9",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "Alertas de emergencia",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 760,
        "wires": []
    },
    {
        "id": "1c7a69094616b2b9",
        "type": "debug",
        "z": "36527cff96e45198",
        "name": "db estatus",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 760,
        "wires": []
    },
    {
        "id": "4400575369d238b3",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Consulta correos",
        "func": "msg.topic = \"SELECT correo FROM encargados;\";\nreturn msg;",
        "outputs": 1,
        "x": 650,
        "y": 880,
        "wires": [
            [
                "ac44989a3c6911b6"
            ]
        ]
    },
    {
        "id": "ac44989a3c6911b6",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sql": "",
        "name": "Obtener correos",
        "x": 890,
        "y": 880,
        "wires": [
            [
                "05058f228f486f99"
            ]
        ]
    },
    {
        "id": "05058f228f486f99",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Redactar correo",
        "func": "let lista = msg.payload.map(e => e.correo);\n\n// Validar que hay destinatarios\nif (lista.length === 0) {\n    node.warn(\"No hay encargados registrados para enviar correo.\");\n    return null;\n}\n\n// Asignar destinatarios y contenido del correo\nmsg.to = lista.join(',');\nmsg.topic = \"🚨 Alerta de emergencia detectada\";\nmsg.payload = `🔔 *Se ha registrado una nueva alerta en el sistema de incendios.*\\n\n📅 Fecha: ${new Date().toLocaleString()}\\n\n📍 Ubicación: Planta principal\\n\n⚠️ *Acción recomendada:* Revise inmediatamente el estado del sistema.\\n\n\\nEste mensaje ha sido generado automáticamente.`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 980,
        "wires": [
            [
                "40d100a4198f6bac"
            ]
        ]
    },
    {
        "id": "40d100a4198f6bac",
        "type": "e-mail",
        "z": "36527cff96e45198",
        "server": "smtp.gmail.com",
        "port": "465",
        "authtype": "BASIC",
        "saslformat": false,
        "token": "oauth2Response.access_token",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Enviar notificación",
        "x": 610,
        "y": 980,
        "wires": []
    },
    {
        "id": "inject_temps",
        "type": "inject",
        "z": "36527cff96e45198",
        "name": "Actualizar datos",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1080,
        "wires": [
            [
                "4aa327109bb59e25"
            ]
        ]
    },
    {
        "id": "query_sqlite_temp",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Consultar Temperaturas",
        "x": 450,
        "y": 1080,
        "wires": [
            [
                "function_chart_temp"
            ]
        ]
    },
    {
        "id": "function_chart_temp",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Preparar datos para gráfica",
        "func": "\nlet labels = [];\nlet values = [];\n\nmsg.payload.reverse().forEach(row => {\n    labels.push(row.fecha_hora);\n    values.push(row.promedio);\n});\n\nmsg.payload = [\n    {\n        series: [\"Promedio Temperatura\"],\n        data: [values],\n        labels: labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "x": 710,
        "y": 1080,
        "wires": [
            [
                "ui_chart_temp"
            ]
        ]
    },
    {
        "id": "ui_chart_temp",
        "type": "ui_chart",
        "z": "36527cff96e45198",
        "name": "Gráfica de Promedios",
        "group": "3c7cc8ccf41ef724",
        "order": 1,
        "width": 6,
        "height": 4,
        "label": "Promedio de Temperaturas",
        "chartType": "line",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Esperando datos...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 780,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "4aa327109bb59e25",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar Actividad",
        "func": "\n// Preparar sentencia SQL para SQLite\nmsg.topic = `SELECT fecha_hora, (temp_ambiente + temp_objeto)/2 AS promedio FROM registro_temperaturas ORDER BY fecha_hora DESC LIMIT 10;`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1180,
        "wires": [
            [
                "query_sqlite_temp"
            ]
        ]
    },
    {
        "id": "inject_densidad",
        "type": "inject",
        "z": "36527cff96e45198",
        "name": "Actualizar Densidad",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 1280,
        "wires": [
            [
                "e4cfe9faf90eaa53",
                "ed8ef3d6da4b0b5a"
            ]
        ]
    },
    {
        "id": "sqlite_densidad_prom",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Promedio Densidad",
        "x": 470,
        "y": 1260,
        "wires": [
            [
                "function_densidad_prom"
            ]
        ]
    },
    {
        "id": "function_densidad_prom",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Formatear Promedio",
        "func": "\nmsg.payload = [\n    {\n        series: [\"Promedio Densidad\"],\n        data: [[msg.payload[0].promedio]],\n        labels: [\"Global\"]\n    }\n];\nreturn msg;\n",
        "outputs": 1,
        "x": 700,
        "y": 1260,
        "wires": [
            [
                "ui_chart_densidad_prom"
            ]
        ]
    },
    {
        "id": "ui_chart_densidad_prom",
        "type": "ui_chart",
        "z": "36527cff96e45198",
        "name": "Promedio Global de Densidad",
        "group": "fac2a8b0167f6c95",
        "order": 1,
        "width": 7,
        "height": 4,
        "label": "Promedio Global de Densidad",
        "chartType": "bar",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Esperando datos...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#00aaff",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 970,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "sqlite_densidad_estado",
        "type": "sqlite",
        "z": "36527cff96e45198",
        "mydb": "db3fae6ebe4c50e5",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Contar Estados",
        "x": 480,
        "y": 1340,
        "wires": [
            [
                "function_densidad_estado"
            ]
        ]
    },
    {
        "id": "function_densidad_estado",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Formatear Estados",
        "func": "\nlet labels = [];\nlet values = [];\n\nmsg.payload.forEach(row => {\n    labels.push(row.estado);\n    values.push(row.cantidad);\n});\n\nmsg.payload = [\n    {\n        series: [\"Estados\"],\n        data: [values],\n        labels: labels\n    }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "x": 720,
        "y": 1340,
        "wires": [
            [
                "ui_chart_densidad_estado"
            ]
        ]
    },
    {
        "id": "ui_chart_densidad_estado",
        "type": "ui_chart",
        "z": "36527cff96e45198",
        "name": "Frecuencia de Estados",
        "group": "fac2a8b0167f6c95",
        "order": 2,
        "width": 7,
        "height": 4,
        "label": "Frecuencia de Estados",
        "chartType": "bar",
        "legend": "false",
        "xformat": "auto",
        "interpolate": "linear",
        "nodata": "Esperando datos...",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#ff6600",
            "#ffaa00",
            "#ffcc00",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000",
            "#000000"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 990,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "e4cfe9faf90eaa53",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar Actividad",
        "func": "\n// Preparar sentencia SQL para SQLite\nmsg.topic = `SELECT AVG(densidad) AS promedio FROM registro_densidad;`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1360,
        "wires": [
            [
                "sqlite_densidad_prom"
            ]
        ]
    },
    {
        "id": "ed8ef3d6da4b0b5a",
        "type": "function",
        "z": "36527cff96e45198",
        "name": "Procesar Actividad",
        "func": "\n// Preparar sentencia SQL para SQLite\nmsg.topic = `SELECT estado, COUNT(*) AS cantidad FROM registro_densidad GROUP BY estado;`;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1400,
        "wires": [
            [
                "sqlite_densidad_estado"
            ]
        ]
    },
    {
        "id": "f1e5f914bc295e56",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.emqx.io",
        "port": 1883,
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": 4,
        "keepalive": 60,
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "db3fae6ebe4c50e5",
        "type": "sqlitedb",
        "db": "C:\\SQLiteTools\\firealarm.db",
        "mode": "RWC"
    },
    {
        "id": "3c7cc8ccf41ef724",
        "type": "ui_group",
        "name": "Gráficas de la Temperatura promedio",
        "tab": "ui_tab1",
        "order": 5,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "fac2a8b0167f6c95",
        "type": "ui_group",
        "name": "Gráficas de densidad del aire",
        "tab": "ui_tab1",
        "order": 4,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "ui_tab1",
        "type": "ui_tab",
        "name": "Sistema Alarma",
        "icon": "dashboard",
        "order": 1
    }
]